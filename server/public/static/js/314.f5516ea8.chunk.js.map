{"version":3,"file":"static/js/314.f5516ea8.chunk.js","mappings":"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","sources":["api/createQuiz.js","functions/createQuiz.js","components/startquiz/AnswerSection.jsx","components/startquiz/Timer.jsx","pages/StartQuiz.jsx"],"sourcesContent":["import axios from \"axios\";\r\nconst url = process.env.REACT_APP_BACKEND_URL+\"/creator\";\r\naxios.defaults.headers.post['Content-Type'] = 'multipart/form-data';\r\n export const createNewQuiz = (newQuiz,header) => axios.post(url, newQuiz,header);\r\n export const updateQuiz = (id,data,header) => axios.patch(`${url}/${id}`,data,header);\r\n export const playerAttempt = (uid,data) => axios.patch(`${url}/${uid}`,data);","import * as api from \"../api/createQuiz\";\r\nexport const createNewQuiz = async (newQuiz, header) => {\r\n  try {\r\n    const { data } = await api.createNewQuiz(newQuiz, header);\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nexport const updateQuiz = async (id, data, header) => {\r\n  try {\r\n    const result = await api.updateQuiz(id, data, header);\r\n    return result;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nexport const newPlayer = async (id, data) => {\r\n  try {\r\n    const result = await api.playerAttempt(id, data);\r\n    return result;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import { Box, Paper, Grid, Typography } from \"../../utlis/materialComponents\";\r\nimport { styled } from \"@mui/material/styles\";\r\nconst Answer = styled(Paper)(({ theme }) => ({\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(1),\r\n  textAlign: \"center\",\r\n  mt: 3,\r\n  width: \"90%\",\r\n  color: theme.palette.text.secondary,\r\n  \"&:hover\": {\r\n    width: \"92%\",\r\n    cursor: \"pointer\",\r\n  },\r\n}));\r\nconst AnswerSection = (props) => {\r\n  const selectHandler = () => {\r\n    props.checkClickHandler(props.index);\r\n  };\r\n  return (\r\n    <Grid item xs={6} onClick={selectHandler}>\r\n      <Box>\r\n        <Answer\r\n          sx={\r\n            props.clickOpt === props.index\r\n              ? { backgroundColor: \"#E7AB79\" }\r\n              : { backgroundColor: props.color }\r\n          }\r\n        >\r\n          <Typography\r\n            variant=\"h6\"\r\n            gutterBottom\r\n            component=\"div\"\r\n            sx={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              color: \"#ffffff\",\r\n              fontWeight: \"500\",\r\n            }}\r\n          >\r\n            {props.option}\r\n          </Typography>\r\n        </Answer>\r\n      </Box>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default AnswerSection;\r\n","import React from \"react\";\r\nimport { Box, Typography } from \"../../utlis/materialComponents\";\r\n\r\nconst Timer = (props) => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        backgroundColor: \"#7b1fa2\",\r\n        color: \"#ffffff\",\r\n        width: \"100px\",\r\n        height: \"100px\",\r\n        borderRadius: \"55%\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        mt: 2,\r\n        ml: 1,\r\n      }}\r\n    >\r\n      {\" \"}\r\n      <Typography\r\n        variant=\"h5\"\r\n        gutterBottom\r\n        component=\"div\"\r\n        sx={{ fontWeight: \"bold\", mt: 2, fontSize: 32 }}\r\n      >\r\n        {props.timer}{\" \"}\r\n      </Typography>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Timer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport AnswerSection from \"../components/startquiz/AnswerSection\";\r\nimport Timer from \"../components/startquiz/Timer\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\n\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Divider,\r\n  Box,\r\n  Paper,\r\n  Button,\r\n  Modal,\r\n} from \"../utlis/materialComponents\";\r\nconst { newPlayer } = require(\"../functions/createQuiz\");\r\nconst Question = styled(Paper)(({ theme }) => ({\r\n  backgroundColor: theme.palette.mode === \"dark\" ? \"#1A2027\" : \"#fff\",\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(1),\r\n  textAlign: \"center\",\r\n  mt: 3,\r\n  width: \"70%\",\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\nconst ResultModal = styled(Box)(({ theme }) => ({\r\n  padding: theme.spacing(1),\r\n  bgcolor: \"background.paper\",\r\n  [theme.breakpoints.down('md')]: {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    width: \"24rem\",\r\n    boxShadow: 24,\r\n    p: 4,\r\n  },\r\n  [theme.breakpoints.up('md')]: {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    width: \"50rem\",\r\n    \r\n  \r\n    boxShadow: 24,\r\n    p: 4,\r\n  },\r\n\r\n}));\r\nwindow.onbeforeunload = function () {\r\n  if (true) {\r\n    return \"If you reload this page, your previous action will be repeated\";\r\n  } else {\r\n  }\r\n};\r\nconst StartQuiz = () => {\r\n  document.title = \"StartQuiz-QuizWorld\";\r\n  const [open, setOpen] = React.useState(false);\r\n  const [clicked, setClicked] = useState(true);\r\n  const [correct, setCorrect] = useState(0);\r\n  const [userSelected, setUserSelected] = useState(undefined);\r\n  const quizArray = useSelector((state) => state.set.quiz);\r\n  const userData=JSON.parse(localStorage.getItem('userData'))\r\n  const [show, setShow] = useState(false);\r\n  const [timer, setTimer] = useState(quizArray.quizDetail.timeLimit);\r\n  const [count, setCount] = useState(1);\r\n  const [currVal, setCurrVal] = useState(quizArray.quizQNA[0]);\r\n  const [timerSet, setTimerSet] = useState(false);\r\n  const [clickOption, setClickOption] = useState(5);\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setShow(true);\r\n    }, 500);\r\n  }, []);\r\n\r\n  const nextQuestionHandler = () => {\r\n    setTimeout(() => {\r\n      setTimer(quizArray.quizDetail.timeLimit);\r\n\r\n      setTimerSet(true);\r\n      if (userSelected === currVal.correctOpt) {\r\n        setCorrect(correct + 1);\r\n      }\r\n      setCount(count + 1);\r\n      if (count < quizArray.quizQNA.length) {\r\n        setCurrVal(quizArray.quizQNA[count]);\r\n\r\n        setClicked(true);\r\n      } else {\r\n        setOpen(true);\r\n      }\r\n      setClickOption(5);\r\n    }, 500);\r\n  };\r\n\r\n  const handler = () => {\r\n    if (count <= quizArray.quizQNA.length) {\r\n      setTimeout(() => {\r\n        if (timer > 0 && timerSet) {\r\n          setTimer(quizArray.quizDetail.timeLimit);\r\n          setTimeout(() => {\r\n            setTimerSet(false);\r\n          }, 200);\r\n        } else if (timer > 0 && timerSet === false) {\r\n          setTimer(timer - 1);\r\n        } else if (count < quizArray.quizQNA.length) {\r\n          setClickOption(5);\r\n          setCount(count + 1);\r\n          setCurrVal(quizArray.quizQNA[count]);\r\n          setTimer(quizArray.quizDetail.timeLimit);\r\n\r\n          setClicked(true);\r\n          if (userSelected === currVal.correctOpt) {\r\n            setCorrect(correct + 1);\r\n          }\r\n        } else {\r\n          setOpen(true);\r\n        }\r\n      }, 1000);\r\n    }\r\n  };\r\n  handler(timer);\r\n\r\n  const checkHandler = (ind) => {\r\n    setUserSelected(ind);\r\n    setClickOption(ind);\r\n  };\r\n  const attemptHandler=async()=>{\r\n    const date=Date().slice(0, 15);\r\n    \r\n    let attempts=quizArray.attempts;\r\n    const attempArr=[...attempts,{\r\n      userName:userData.userName,\r\n     CorrectAnswer: correct,\r\n     Date: date,\r\n     TotalQuestion: quizArray.quizQNA.length,\r\n    }]  \r\n   await newPlayer(quizArray._id,attempArr);\r\n    \r\n  }\r\n  return (\r\n    <>\r\n      <Modal\r\n        open={open}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        {/* <Box sx={style}> */}\r\n        <ResultModal sx={{bgcolor: \"#ffffff\",borderRadius: '16px'}}>\r\n          <Typography id=\"modal-modal-title\" variant=\"h2\" component=\"h2\">\r\n            Result:\r\n          </Typography>\r\n          <Typography id=\"modal-modal-description\" variant=\"h4\" sx={{ mt: 2 }}>\r\n             You have Scored {correct} out of{\" \"}\r\n            {quizArray.quizQNA.length}.\r\n          </Typography>\r\n          <Divider />\r\n          <Box sx={{ display: \"flex\", justifyContent: \"center\" ,}}>\r\n            <Button\r\n              variant=\"contained\"\r\n              to=\"/discover\"\r\n              component={Link}\r\n              onClick={attemptHandler}\r\n              sx={{ mt: 4 ,'&:hover': { \r\n                color:'#ffffff',\r\n            }}}\r\n            >\r\n              Back\r\n            </Button>\r\n          </Box>\r\n          </ResultModal>\r\n        {/* </Box> */}\r\n      </Modal>\r\n      {show === false ? (\r\n        <Box\r\n          sx={{ display: \"flex\", justifyContent: \"center\", height: \"100vh\" }}\r\n        >\r\n          <CircularProgress />\r\n        </Box>\r\n      ) : (\r\n        <>\r\n          {\" \"}\r\n          <Box\r\n            sx={{ display: \"flex\", justifyContent: \"flex-end\", mt: 3, mr: 2 }}\r\n          >\r\n            <Button\r\n              variant=\"contained\"\r\n              onClick={nextQuestionHandler}\r\n              sx={{ fontWeight: \"bold\", textTransform: \"capitalize\", px: 5 }}\r\n            >\r\n              {clickOption === 5 ? \"skip\" : \"Next\"}\r\n            </Button>\r\n          </Box>\r\n          <Timer\r\n            timer={timerSet === true ? quizArray.quizDetail.timeLimit : timer}\r\n          />\r\n          <Box sx={{ display: \"flex\", justifyContent: \"center\", mt: 3 }}>\r\n            <Question>\r\n              <Typography\r\n                variant=\"h5\"\r\n                gutterBottom\r\n                component=\"div\"\r\n                sx={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  color: \"#000000\",\r\n                  fontWeight: \"bold\",\r\n                }}\r\n              >\r\n                {currVal.question}\r\n              </Typography>\r\n            </Question>\r\n          </Box>\r\n          <Box sx={{ flexGrow: 1, mt: 4,mr:5 }}>\r\n            <Grid container spacing={2} sx={{ ml: 1, mt: 4 }}>\r\n              {currVal.options.map((value, ind) => {\r\n                return (\r\n                  <AnswerSection\r\n                    option={value.option}\r\n                    color={value.color}\r\n                    index={ind}\r\n                    key={ind}\r\n                    checkClick={clicked}\r\n                    checkClickHandler={checkHandler}\r\n                    clickOpt={clickOption}\r\n                  />\r\n                );\r\n              })}\r\n            </Grid>\r\n          </Box>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StartQuiz;\r\n"],"names":["url","process","axios","createNewQuiz","newQuiz","header","updateQuiz","id","data","playerAttempt","uid","api","console","log","result","newPlayer","Answer","styled","Paper","theme","typography","body2","padding","spacing","textAlign","mt","width","color","palette","text","secondary","cursor","props","Grid","item","xs","onClick","checkClickHandler","index","Box","sx","clickOpt","backgroundColor","Typography","variant","gutterBottom","component","display","justifyContent","fontWeight","option","height","borderRadius","alignItems","ml","fontSize","timer","require","Question","mode","ResultModal","bgcolor","breakpoints","down","position","top","left","transform","boxShadow","p","up","window","onbeforeunload","document","title","React","open","setOpen","useState","clicked","setClicked","correct","setCorrect","undefined","userSelected","setUserSelected","quizArray","useSelector","state","set","quiz","userData","JSON","parse","localStorage","getItem","show","setShow","quizDetail","timeLimit","setTimer","count","setCount","quizQNA","currVal","setCurrVal","timerSet","setTimerSet","clickOption","setClickOption","useEffect","setTimeout","length","correctOpt","checkHandler","ind","attemptHandler","date","Date","slice","attempts","attempArr","userName","CorrectAnswer","TotalQuestion","_id","Modal","Divider","Button","to","Link","CircularProgress","mr","textTransform","px","question","flexGrow","container","options","map","value","checkClick"],"sourceRoot":""}