{"version":3,"file":"static/js/916.ca63914e.chunk.js","mappings":"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","sources":["api/createQuiz.js","functions/createQuiz.js","components/createquiz/Quiz/QuizAnswers.jsx","components/createquiz/Quiz/Quiz.jsx","components/createquiz/NewQuiz.jsx","components/createquiz/Quiz/CoverImage.jsx","components/createquiz/Quiz/QuizSummaryModal.jsx","components/createquiz/SubmitModel.jsx","components/createquiz/LeftQuizMenu.jsx","components/createquiz/RightQuizMenu.jsx","pages/CreateQuiz.jsx"],"sourcesContent":["import axios from \"axios\";\r\nconst url = process.env.REACT_APP_BACKEND_URL+\"/creator\";\r\naxios.defaults.headers.post['Content-Type'] = 'multipart/form-data';\r\n export const createNewQuiz = (newQuiz,header) => axios.post(url, newQuiz,header);\r\n export const updateQuiz = (id,data,header) => axios.patch(`${url}/${id}`,data,header);\r\n export const playerAttempt = (uid,data) => axios.patch(`${url}/${uid}`,data);","import * as api from \"../api/createQuiz\";\r\nexport const createNewQuiz = async (newQuiz, header) => {\r\n  try {\r\n    const { data } = await api.createNewQuiz(newQuiz, header);\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nexport const updateQuiz = async (id, data, header) => {\r\n  try {\r\n    const result = await api.updateQuiz(id, data, header);\r\n    return result;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nexport const newPlayer = async (id, data) => {\r\n  try {\r\n    const result = await api.playerAttempt(id, data);\r\n    return result;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { pink } from \"@mui/material/colors\";\r\nimport { styled } from \"@mui/material/styles\";\r\n\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Checkbox,\r\n  TextField,\r\n  Paper,\r\n} from \"../../../utlis/materialComponents\";\r\n\r\nimport { optionHandler, correctOptionHandler } from \"../../../store/quizMcq\";\r\nimport { tfCorrectOptionHandler } from \"../../../store/truefalse\";\r\n\r\nconst label = { inputProps: { \"aria-label\": \"Checkbox demo\" } };\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  backgroundColor: theme.palette.mode === \"dark\" ? \"#1A2027\" : \"#fff\",\r\n  ...theme.typography.body2,\r\n  textAlign: \"center\",\r\n  fontColor: \"white\",\r\n}));\r\nconst Answers = styled(Paper)(({ theme }) => ({\r\n  backgroundColor: theme.palette.mode === \"dark\" ? \"#1A2027\" : \"#fff\",\r\n  ...theme.typography.body2,\r\n  [theme.breakpoints.down(\"md\")]: {\r\n    width: \"220px\",\r\n    backgroundColor: \"#ffffff\",\r\n  },\r\n}));\r\nconst QuizAnswers = ({ indexj, opt, index, correct }) => {\r\n  const dispatch = useDispatch();\r\n  const quizType = useSelector((state) => state.detail.quizType);\r\n  const [optionValue, setOptionValue] = useState(opt.option);\r\n  const optionValHandler = (value, i, j) => {\r\n    dispatch(optionHandler({ value, i, j }));\r\n  };\r\n  const correctOptHandler = (i, j) => {\r\n    if (quizType === \"quiz\") {\r\n      dispatch(correctOptionHandler({ i, j }));\r\n    } else {\r\n      dispatch(tfCorrectOptionHandler({ i, j }));\r\n    }\r\n  };\r\n  return (\r\n    <Grid item xs={7} md={6}>\r\n      {/* <Item> */}\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n        }}\r\n      >\r\n        <Item>\r\n          {\" \"}\r\n          <Box\r\n            sx={{\r\n              width: \"40px\",\r\n              height: \"109px\",\r\n              backgroundColor: opt.color,\r\n              borderRadius: 1,\r\n            }}\r\n          ></Box>\r\n        </Item>\r\n        <Answers>\r\n          {\" \"}\r\n          {quizType === \"quiz\" && (\r\n            <TextField\r\n              onChange={(e) => {\r\n                setOptionValue(e.target.value);\r\n              }}\r\n              onBlur={(e) => {\r\n                optionValHandler(e.target.value, index, indexj);\r\n              }}\r\n              value={optionValue}\r\n              placeholder={`Add Answer ${indexj + 1}`}\r\n              id=\"fullWidth\"\r\n              variant=\"standard\"\r\n              sx={{\r\n                input: { width: \"294px\", height: \"100px\" },\r\n                pl: 2,\r\n                display: \"flex\",\r\n\r\n                justifyContent: \"center\",\r\n              }}\r\n              InputProps={{\r\n                disableUnderline: true,\r\n              }}\r\n            />\r\n          )}\r\n          {quizType === \"trueFalse\" && (\r\n            <TextField\r\n              value={opt.color === \"#3668CE\" ? \"True\" : \"False\"}\r\n              id=\"fullWidth\"\r\n              variant=\"standard\"\r\n              sx={{\r\n                input: { width: \"294px\", height: \"100px\" },\r\n                pl: 2,\r\n                display: \"flex\",\r\n\r\n                justifyContent: \"center\",\r\n              }}\r\n              InputProps={{\r\n                disableUnderline: true,\r\n              }}\r\n            />\r\n          )}\r\n        </Answers>\r\n        <Item\r\n          sx={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <Checkbox\r\n            onClick={(e) => {\r\n              correctOptHandler(index, indexj);\r\n            }}\r\n            {...label}\r\n            checked={correct === indexj ? true : false}\r\n            sx={{\r\n              color: pink[800],\r\n              \"&.Mui-checked\": {\r\n                color: pink[600],\r\n              },\r\n            }}\r\n          />\r\n        </Item>\r\n      </Box>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default QuizAnswers;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport QuizAnswers from \"./QuizAnswers\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport {\r\n  addMoreOptionHandler,\r\n  removeMoreOptionHandler,\r\n} from \"../../../store/quizMcq\";\r\nimport {\r\n  TextField,\r\n  Box,\r\n  Grid,\r\n  DeleteOutlineOutlinedIcon,\r\n  Button,\r\n  Divider,\r\n  StarsRoundedIcon,\r\n} from \"../../../utlis/materialComponents\";\r\nconst Question = styled(\"div\")(({ theme }) => ({\r\n  [theme.breakpoints.down(\"md\")]: {\r\n    maxWidth: \"95%\",\r\n  },\r\n}));\r\nconst Buttons = styled(\"div\")(({ theme }) => ({\r\n  [theme.breakpoints.down(\"md\")]: {\r\n    width: \"100%\",\r\n    // ml:5\r\n  },\r\n}));\r\nconst Quiz = ({ ques, index, questionHandler }) => {\r\n  const dispatch = useDispatch();\r\n  const quizType = useSelector((state) => state.detail.quizType);\r\n  const [moreOption, setMoreOption] = useState(false);\r\n  const [moreOptionText, setMoreOptionText] = useState(\"Add more answers\");\r\n  const [quesValue, setQuesValue] = useState(ques.question);\r\n  const moreOptionHandler = () => {\r\n    if (moreOption === false) {\r\n      setMoreOption(true);\r\n      dispatch(addMoreOptionHandler({ index }));\r\n      setMoreOptionText(\"Remove addition answers\");\r\n    } else {\r\n      setMoreOption(false);\r\n      dispatch(removeMoreOptionHandler({ index }));\r\n\r\n      setMoreOptionText(\"Add more answers\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Question\r\n        component=\"form\"\r\n        sx={{\r\n          maxWidth: \"98%\",\r\n          bgcolor: \"#fff\",\r\n          mt: 6,\r\n          boxShadow: 3,\r\n          borderRadius: 2,\r\n        }}\r\n        noValidate\r\n        autoComplete=\"off\"\r\n      >\r\n        <TextField\r\n          value={quesValue}\r\n          onBlur={(e) => {\r\n            questionHandler(e.target.value, index);\r\n          }}\r\n          onChange={(e) => {\r\n            setQuesValue(e.target.value);\r\n          }}\r\n          fullWidth\r\n          id=\"outlined-basic\"\r\n          placeholder=\"start typing your question\"\r\n          InputProps={{\r\n            disableUnderline: true,\r\n          }}\r\n          variant=\"standard\"\r\n          sx={{\r\n            p: 1,\r\n            borderRadius: \"40px\",\r\n\r\n            input: { textAlign: \"center\", fontSize: \"20px\" },\r\n          }}\r\n        />\r\n      </Question>\r\n\r\n      <Box sx={{ flexGrow: 1, mt: 6, mr: 2 }}>\r\n        <Grid container spacing={1} sx={{ mb: 5 }}>\r\n          {ques.options.map((op, j) => {\r\n            return (\r\n              <QuizAnswers\r\n                correct={ques.correctOpt}\r\n                key={j}\r\n                indexj={j}\r\n                opt={op}\r\n                index={index}\r\n              />\r\n            );\r\n          })}\r\n        </Grid>\r\n\r\n        {quizType === \"quiz\" && (\r\n          <Buttons sx={{ width: \"100%\" }}>\r\n            <Button\r\n              variant=\"outlined\"\r\n              onClick={moreOptionHandler}\r\n              sx={{\r\n                fontWeight: \"bold\",\r\n                textTransform: \"capitalize\",\r\n                px: 3,\r\n                mt: 5,\r\n                mb: 2,\r\n                mr: 2,\r\n                color: \"#3E8282 \",\r\n              }}\r\n            >\r\n              {\" \"}\r\n              <StarsRoundedIcon />\r\n              {moreOptionText}\r\n            </Button>\r\n\r\n            <Button\r\n              variant=\"outlined\"\r\n              sx={{\r\n                fontWeight: \"bold\",\r\n                textTransform: \"capitalize\",\r\n                px: 3,\r\n                mt: 5,\r\n                mb: 2,\r\n                color: \"#A13333 \",\r\n              }}\r\n            >\r\n              {\" \"}\r\n              <DeleteOutlineOutlinedIcon />\r\n              Delete\r\n            </Button>\r\n          </Buttons>\r\n        )}\r\n        <Divider />\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { quesHandler } from \"../../store/quizMcq\";\r\nimport { tfQuesHandler } from \"../../store/truefalse\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport {\r\n  Box,\r\n  Container\r\n} from \"../../utlis/materialComponents\";\r\nimport Quiz from \"./Quiz/Quiz\";\r\n\r\nimport { MDBContainer } from \"mdbreact\";\r\nimport \"./Quiz/style.css\";\r\nconst BoxContainer = styled(Box)(({ theme }) => ({\r\n  [theme.breakpoints.down(\"md\")]: {\r\n    width: \"320px\"\r\n  },\r\n}));\r\nconst NewQuiz = () => {\r\n  const dispatch = useDispatch();\r\n  const quizArray = useSelector((state) => state.mcq.quizQna);\r\n  const truefalseArray = useSelector((state) => state.trueFalse.quizQna);\r\n  const quizType = useSelector((state) => state.detail.quizType);\r\n  const [quizes, setQuizes] = useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n  useEffect(() => {\r\n    if (quizType === \"quiz\") {\r\n      setQuizes(quizArray);\r\n    } else {\r\n      setQuizes(truefalseArray);\r\n    }\r\n    setShow(true)\r\n  }, [quizArray, quizes, quizType, truefalseArray]);\r\n  const questionHandler = (text, i) => {\r\n    if (quizType === \"quiz\") {\r\n      dispatch(quesHandler({ text, i }));\r\n    } else {\r\n      dispatch(tfQuesHandler({ text, i }));\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <MDBContainer>\r\n        <Container fixed>\r\n          <BoxContainer\r\n            sx={{ height: \"95vh\",width: \"820px\", maxHeight: \"82vh\"  }}\r\n            className=\"scrollbar scrollbar-primary\"\r\n           \r\n          >\r\n            {show&&quizes.map((ques, i) => {\r\n              return (\r\n                <Quiz\r\n                  key={i}\r\n                  ques={ques}\r\n                  index={i}\r\n                  questionHandler={questionHandler}\r\n                />\r\n              );\r\n            })}\r\n          </BoxContainer>\r\n        </Container>\r\n      </MDBContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewQuiz;","import React, { useRef, useState, useEffect,useContext } from \"react\";\r\n// import { useDispatch } from \"react-redux\";\r\n// import { updateImgSrc } from \"../../../store/quizSummary\";\r\nimport ImageContext from '../../../contextapi/ImageContext'\r\nimport { Box, Button, Paper } from \"../../../utlis/materialComponents\";\r\nconst styles = {\r\n  paperContainer: {\r\n    height: 194,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n};\r\nconst CoverImage = (props) => {\r\n  // const dispatch = useDispatch();\r\n  const [file, setFile] = useState();\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n  const [isValid, setIsValid] = useState(false);\r\n  const context = useContext(ImageContext);\r\n  const { setImage } = context;\r\n  const filePickerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!file) {\r\n      return;\r\n    }\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n  const pickedHandler = (event) => {\r\n    let pickedFile;\r\n    let fileIsValid = isValid;\r\n    if (event.target.files && event.target.files.length === 1) {\r\n      pickedFile = event.target.files[0];\r\n      setFile(pickedFile);\r\n      setImage(pickedFile)\r\n      setIsValid(true);\r\n      fileIsValid = true;\r\n    } else {\r\n      setIsValid(false);\r\n      fileIsValid = false;\r\n      console.log(fileIsValid);\r\n    }\r\n  };\r\n\r\n  const pickImageHandler = () => {\r\n    filePickerRef.current.click();\r\n  };\r\n  return (\r\n    <Paper\r\n      style={styles.paperContainer}\r\n      sx={{\r\n        backgroundImage: `url(${previewUrl})`,\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundAttachment: \"fixed\",\r\n        backgroundPosition: \"center\",\r\n        backgroundSize: \"297px 209px\",\r\n      }}\r\n    >\r\n      <Box>\r\n        <input\r\n          id={props.id}\r\n          ref={filePickerRef}\r\n          style={{ display: \"none\" }}\r\n          type=\"file\"\r\n          accept=\".jpg,.png,.jpeg\"\r\n          onChange={pickedHandler}\r\n        />\r\n        <Button\r\n          variant=\"contained\"\r\n          sx={{\r\n            fontWeight: \"bold\",\r\n            textTransform: \"capitalize\",\r\n            px: 2,\r\n            py: 1,\r\n          }}\r\n          onClick={pickImageHandler}\r\n        >\r\n          Change\r\n        </Button>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default CoverImage;\r\n","import * as React from \"react\";\r\nimport { useState } from \"react\";\r\nimport {useSelector, useDispatch } from \"react-redux\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport {\r\n  updateTitle,\r\n  updateDescription,\r\n  updateVisibility,\r\n  updateCategory,\r\n  updateCreator,\r\n} from \"../../../store/quizSummary\";\r\nimport CoverImage from \"./CoverImage\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Typography,\r\n  Modal,\r\n  SettingsOutlinedIcon,\r\n  Grid,\r\n  TextField,\r\n  Radio,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  FormControl,\r\n  ButtonGroup,\r\n  Select,\r\n  InputLabel,\r\n  MenuItem,\r\n} from \"../../../utlis/materialComponents\";\r\n\r\nconst ButtonHover = styled(\"div\")(({ theme }) => ({\r\n  backgroundColor: \"#40890F\",\r\n  \"&:hover\": {\r\n    backgroundColor: \"#6b530f\",\r\n  },\r\n}));\r\n\r\nconst style = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 800,\r\n  bgcolor: \"background.paper\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  [theme.breakpoints.down(\"md\")]: {\r\n    width: 400,\r\n    left: \"45%\",\r\n    transform: \"translate(-100%, -50%)\",\r\n  },\r\n}));\r\nconst QuizSummaryModal = () => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n  //handle data\r\n  const Title = useSelector((state) => state.detail.title);\r\n  const Description = useSelector((state) => state.detail.description);\r\n  const Visibility = useSelector((state) => state.detail.visibility);\r\n  const Creator = useSelector((state) => state.detail.creator);\r\n  const Category = useSelector((state) => state.detail.category);\r\n\r\n  const [title, setTitle] = useState(Title);\r\n  const [creator, setCreator] = useState(Creator);\r\n  const [category, setCategory] = useState(Category );\r\n  const [description, setDescription] = useState(Description);\r\n  const [visibility, setVisibility] = useState(Visibility);\r\n  const dispatch = useDispatch();\r\n  const saveInfoHandler = () => {\r\n    dispatch(updateTitle(title));\r\n    dispatch(updateDescription(description));\r\n    dispatch(updateVisibility(visibility));\r\n    dispatch(updateCategory(category));\r\n    dispatch(updateCreator(creator));\r\n\r\n    handleClose();\r\n  };\r\n  const handleChangeCategory = (event) => {\r\n    setCategory(event.target.value);\r\n  };\r\n  return (\r\n    <div>\r\n      <Button\r\n        variant=\"outlined\"\r\n        onClick={handleOpen}\r\n        sx={{\r\n          fontWeight: \"bold\",\r\n          textTransform: \"capitalize\",\r\n          px: 3,\r\n          py: 2,\r\n          mt: 2,\r\n          color: \"black\",\r\n          backgroundColor: \"#F2F2F2\",\r\n        }}\r\n      >\r\n        <SettingsOutlinedIcon /> Quiz Summary\r\n      </Button>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Container sx={style}>\r\n          <Typography id=\"modal-modal-title\" variant=\"h4\" component=\"h4\">\r\n            Quiz Summary\r\n          </Typography>\r\n          <Box sx={{ flexGrow: 1 }}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} md={7}>\r\n                <Box sx={{ mt: 3 }}>\r\n                  <Typography variant=\"h6\" component=\"h6\" gutterBottom>\r\n                    Title\r\n                  </Typography>\r\n                  <TextField\r\n                    value={title}\r\n                    onChange={(e) => setTitle(e.target.value)}\r\n                    id=\"outlined-basic\"\r\n                    label=\"Enter Quiz Title Here\"\r\n                    variant=\"outlined\"\r\n                    sx={{ width: 300 }}\r\n                  />\r\n                </Box>\r\n                <Box sx={{ mt: 3 }}>\r\n                  <Typography variant=\"h6\" component=\"h6\" gutterBottom>\r\n                    Description (optional)\r\n                  </Typography>\r\n                  <TextField\r\n                    value={description}\r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                    id=\"outlined-multiline-static\"\r\n                    label=\"Quiz Description\"\r\n                    multiline\r\n                    rows={4}\r\n                    sx={{ width: 300 }}\r\n                  />\r\n                </Box>\r\n                <Box sx={{ mt: 3 }}>\r\n                  <Typography variant=\"h6\" component=\"h6\" gutterBottom>\r\n                    Creator\r\n                  </Typography>\r\n                  <TextField\r\n                    value={creator}\r\n                    onChange={(e) => setCreator(e.target.value)}\r\n                    id=\"outlined-basic\"\r\n                    label=\"Enter Creator Name Here.\"\r\n                    variant=\"outlined\"\r\n                    sx={{ width: 300 }}\r\n                  />\r\n                </Box>\r\n              </Grid>\r\n              <Grid item xs={12} md={5}>\r\n                <Box sx={{ mt: 3 }}>\r\n                  <Typography variant=\"h6\" component=\"h6\" gutterBottom>\r\n                    Cover Image\r\n                  </Typography>\r\n                  <CoverImage id=\"image\" errorText=\"Please provide an image.\"/>\r\n                  <Typography\r\n                    variant=\"h6\"\r\n                    component=\"h6\"\r\n                    gutterBottom\r\n                    sx={{ mt: 2 }}\r\n                  >\r\n                    Visibility\r\n                  </Typography>\r\n                  <FormControl>\r\n                    <RadioGroup\r\n                      row\r\n                      aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n                      name=\"row-radio-buttons-group\"\r\n                       value={visibility}\r\n                    >\r\n                      <FormControlLabel\r\n                         value=\"private\"\r\n                        control={<Radio />}\r\n                        label=\"Private\"\r\n                        onClick={() => {\r\n                          setVisibility(\"private\");\r\n                        }}\r\n                      />\r\n                      <FormControlLabel\r\n                        onClick={() => {\r\n                          setVisibility(\"public\");\r\n                        }}\r\n                        value=\"public\"\r\n                        control={<Radio />}\r\n                        label=\"Public\"\r\n                      />\r\n                    </RadioGroup>\r\n                  </FormControl>\r\n                  <Box sx={{ minWidth: 120, mb: 2 }}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">\r\n                        Category\r\n                      </InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        value={category}\r\n                        label=\"Category\"\r\n                        onChange={handleChangeCategory}\r\n                      >\r\n                        <MenuItem value={\"education\"}>Education</MenuItem>\r\n                        <MenuItem value={\"entertainment\"}>\r\n                          Entertainment\r\n                        </MenuItem>\r\n                        <MenuItem value={\"sports\"}>Sports</MenuItem>\r\n                        <MenuItem value={\"technical\"}>Technival</MenuItem>\r\n                        <MenuItem value={\"programming\"}>Programming</MenuItem>\r\n                        <MenuItem value={\"generalknowledge\"}>\r\n                          General Knowledge\r\n                        </MenuItem>\r\n                        <MenuItem value={\"interviewquestions\"}>\r\n                          Interview Questions\r\n                        </MenuItem>\r\n                        <MenuItem value={\"other\"}>other</MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Box>\r\n                </Box>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              \"& > *\": {\r\n                m: 1,\r\n              },\r\n            }}\r\n          >\r\n            <ButtonGroup variant=\"outlined\">\r\n              <Button\r\n                variant=\"outlined\"\r\n                sx={{\r\n                  fontWeight: \"bold\",\r\n                  textTransform: \"capitalize\",\r\n                  px: 3,\r\n                  mr: 1,\r\n                  color: \"#A13333 \",\r\n                  backgroundColor: \"#F2F2F2\",\r\n                }}\r\n                onClick={handleClose}\r\n              >\r\n                Cancel\r\n              </Button>\r\n              <ButtonHover>\r\n                <Button\r\n                  sx={{\r\n                    fontWeight: \"bold\",\r\n                    textTransform: \"capitalize\",\r\n                    px: 3,\r\n\r\n                    backgroundColor: \"#40890F\",\r\n                    color: \"white\",\r\n                  }}\r\n                  onClick={saveInfoHandler}\r\n                >\r\n                  Done\r\n                </Button>\r\n              </ButtonHover>\r\n            </ButtonGroup>\r\n          </Box>\r\n        </Container>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\nexport default QuizSummaryModal;\r\n","import * as React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\n\r\nconst SubmitModel = (props) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [error, setError] = React.useState(false);\r\n  const [errorMessage, setErrorMessage] = React.useState(\"\");\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"md\"));\r\n\r\n  const handleClickOpen = () => {\r\n    if (\r\n      props.newQuiz[0].question === \"\" &&\r\n      props.newTrueFalse[0].question === \"\"\r\n    ) {\r\n      setError(true);\r\n      setErrorMessage(\r\n        \"All questions need to be completed before you can createQuiz.\"\r\n      );\r\n    } else if (\r\n      props.newTrueFalse[0].correctOpt === \"\" &&\r\n      props.newQuiz[0].correctOpt === \"\"\r\n    ) {\r\n      setError(true);\r\n      setErrorMessage(\"Please select a option.to create a quiz.\");\r\n    } else if (\r\n      props.detail.quizType === \"\" ||\r\n      props.detail.timeLimit === \"\" ||\r\n      props.detail.title === \"\" ||\r\n      props.detail.description === \"\" ||\r\n      props.detail.visibility === \"\" ||\r\n      props.detail.category === \"\" ||\r\n      props.detail.creator === \"\" ||\r\n      props.detail.imgSrc === null\r\n    ) {\r\n      setError(true);\r\n      setErrorMessage(\"Please add full detail before you can createQuiz.\");\r\n    } else {\r\n      setError(false);\r\n    }\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const clickHandler = () => {\r\n    if (error === true) {\r\n      setOpen(false);\r\n    } else {\r\n      props.saveHandler();\r\n      setOpen(false);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <Button\r\n        variant=\"outlined\"\r\n        onClick={handleClickOpen}\r\n        sx={{\r\n          fontWeight: \"bold\",\r\n          textTransform: \"capitalize\",\r\n          px: 3,\r\n\r\n          backgroundColor: \"#40890F\",\r\n          color: \"white\",\r\n          \"&:hover\": {\r\n            backgroundColor: \"#669900\",\r\n            color: \"#ffffff\",\r\n          },\r\n        }}\r\n      >\r\n        Save\r\n      </Button>\r\n      <Dialog\r\n        fullScreen={fullScreen}\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"responsive-dialog-title\">\r\n          {error === true\r\n            ? \"This Quiz can't be Create.\"\r\n            : \"Are you sure to create this quiz.\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            {error === true\r\n              ? errorMessage\r\n              : \"Your Quiz is completly filled now you can create this quiz\"}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          {!error && (\r\n            <Button\r\n              autoFocus\r\n              onClick={handleClose}\r\n              sx={{ color: \"black\", fontWeight: 500, mr: 1 }}\r\n            >\r\n              Back to Edit\r\n            </Button>\r\n          )}\r\n          {!error && (\r\n            <Button\r\n              onClick={clickHandler}\r\n              autoFocus\r\n              variant=\"contained\"\r\n              sx={{\r\n                mr: 1,\r\n                fontWeight: \"bold\",\r\n                \"&:hover\": {\r\n                  // backgroundColor: '#669900',\r\n                  color: \"#ffffff\",\r\n                },\r\n              }}\r\n              component={Link}\r\n              to=\"/\"\r\n            >\r\n              Yes\r\n            </Button>\r\n          )}\r\n          {error && (\r\n            <Button\r\n              onClick={clickHandler}\r\n              autoFocus\r\n              variant=\"contained\"\r\n              sx={{ fontWeight: \"bold\" }}\r\n            >\r\n              Ok\r\n            </Button>\r\n          )}\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SubmitModel;\r\n","import * as React from \"react\";\r\nimport  { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport QuizSummaryModal from \"./Quiz/QuizSummaryModal\";\r\nimport ImageContext from '../../contextapi/ImageContext'\r\nimport PropTypes from \"prop-types\";\r\nimport { Box, Button, ButtonGroup } from \"../../utlis/materialComponents\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { addNewQuestion, resetQuizHandler } from \"../../store/quizMcq\";\r\nimport { resetDetailHandlers } from \"../../store/quizSummary\";\r\nimport { tfAddNewQuestion, tfResetHandler } from \"../../store/truefalse\";\r\nimport { setLocationHandler } from \"../../store/auth\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport SubmitModel from \"./SubmitModel\";\r\nconst { createNewQuiz, updateQuiz } = require(\"../../functions/createQuiz\");\r\n\r\nconst ButtonHover = styled(\"div\")(({ theme }) => ({\r\n  backgroundColor: \"#40890F\",\r\n  \"&:hover\": {\r\n    backgroundColor: \"#6b530f\",\r\n  },\r\n}));\r\nconst Container = styled(Box)(({ theme }) => ({\r\n  [theme.breakpoints.down(\"md\")]: {\r\n    gridAutoRows: \"2px\",\r\n  },\r\n}));\r\nconst OuterContainer = styled(\"div\")(({ theme }) => ({\r\n  [theme.breakpoints.down(\"md\")]: {\r\n    height: 260,\r\n  },\r\n}));\r\nfunction Item(props) {\r\n  const { sx, ...other } = props;\r\n  return (\r\n    <Box\r\n      sx={{\r\n        p: 1,\r\n        borderRadius: 2,\r\n        textAlign: \"center\",\r\n        fontSize: \"0.875rem\",\r\n        fontWeight: \"700\",\r\n        ...sx,\r\n      }}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nItem.propTypes = {\r\n  sx: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(\r\n      PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])\r\n    ),\r\n    PropTypes.func,\r\n    PropTypes.object,\r\n  ]),\r\n};\r\n\r\nconst LeftQuizMenu = () => {\r\n  const context = useContext(ImageContext);\r\n  const { image } = context;\r\n  const dispatch = useDispatch();\r\n  const token = useSelector((state) => state.authData.token);\r\n  const id = useSelector((state) => state.authData.id);\r\n  const quizType = useSelector((state) => state.detail.quizType);\r\n  const timeLimit = useSelector((state) => state.detail.timeLimit);\r\n  // const imgSrc = useSelector((state) => state.detail.imgSrc);\r\n  const title = useSelector((state) => state.detail.title);\r\n  const quizId = useSelector((state) => state.detail.quizId);\r\n  const description = useSelector((state) => state.detail.description);\r\n  const visibility = useSelector((state) => state.detail.visibility);\r\n  const creator = useSelector((state) => state.detail.creator);\r\n  const category = useSelector((state) => state.detail.category);\r\n  const quizArray = useSelector((state) => state.mcq.quizQna);\r\n  const truefalseArray = useSelector((state) => state.trueFalse.quizQna);\r\n  const saveInfoHandler = async () => {\r\n    dispatch(setLocationHandler(0));\r\n    let quiz = [];\r\n    if (quizType === \"quiz\") {\r\n      quiz = quizArray;\r\n    } else {\r\n      quiz = truefalseArray;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"image\", image);\r\n    formData.append(\"quizQNA\", JSON.stringify(quiz));\r\n    formData.append(\"timeLimit\", timeLimit);\r\n    formData.append(\"quizType\", quizType);\r\n    formData.append(\"title\", title);\r\n    formData.append(\"description\", description);\r\n    formData.append(\"visibility\", visibility);\r\n    formData.append(\"category\", category);\r\n    formData.append(\"creator\", creator);\r\n    formData.append(\"id\", id);\r\n    if (quizId === \"\") {\r\n      await createNewQuiz(formData, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n          Authorization: token,\r\n        },\r\n      });\r\n\r\n      dispatch(tfResetHandler());\r\n      dispatch(resetDetailHandlers(\"\"));\r\n      dispatch(resetQuizHandler());\r\n    } else {\r\n      await updateQuiz(quizId, formData, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n          Authorization: token,\r\n        },\r\n      });\r\n      dispatch(tfResetHandler());\r\n      dispatch(resetDetailHandlers(\"\"));\r\n      dispatch(resetQuizHandler());\r\n    }\r\n  };\r\n  const addQuestionHandler = () => {\r\n    if (quizType === \"quiz\") {\r\n      dispatch(addNewQuestion());\r\n    } else {\r\n      dispatch(tfAddNewQuestion());\r\n    }\r\n  };\r\n  const exitHandler = () => {\r\n    dispatch(setLocationHandler(0));\r\n    dispatch(tfResetHandler());\r\n    dispatch(resetDetailHandlers(\"\"));\r\n    dispatch(resetQuizHandler());\r\n  };\r\n  return (\r\n    <>\r\n      <OuterContainer style={{ width: \"100%\", height: 360 }}>\r\n        <Container\r\n          sx={{\r\n            display: \"grid\",\r\n            gridAutoRows: \"90px\",\r\n            gap: 7,\r\n            mt: 2,\r\n          }}\r\n        >\r\n          <Item sx={{ gridColumn: \"1\", gridRow: \"span 3\" }}>\r\n            <QuizSummaryModal />\r\n            <Button\r\n              onClick={addQuestionHandler}\r\n              variant=\"contained\"\r\n              sx={{\r\n                fontWeight: \"bold\",\r\n                textTransform: \"capitalize\",\r\n                px: 5,\r\n                py: 2,\r\n                mt: 2,\r\n              }}\r\n            >\r\n              Add Question\r\n            </Button>\r\n          </Item>\r\n\r\n          <Item sx={{ gridColumn: \"1\", gridRow: \"4/ 5\" }}>\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n                \"& > *\": {\r\n                  m: 1,\r\n                },\r\n              }}\r\n            >\r\n              <ButtonGroup variant=\"outlined\">\r\n                <Button\r\n                  to=\"/\"\r\n                  component={Link}\r\n                  variant=\"outlined\"\r\n                  sx={{\r\n                    fontWeight: \"bold\",\r\n                    textTransform: \"capitalize\",\r\n                    px: 3,\r\n                    mr: 1,\r\n                    color: \"#A13333 \",\r\n                    backgroundColor: \"#F2F2F2\",\r\n                  }}\r\n                  onClick={exitHandler}\r\n                >\r\n                  Exit\r\n                </Button>\r\n                <SubmitModel\r\n                  saveHandler={saveInfoHandler}\r\n                  newQuiz={quizArray}\r\n                  newTrueFalse={truefalseArray}\r\n                  detail={{\r\n                    quizType,\r\n                    timeLimit,\r\n                    title,\r\n                    description,\r\n                    visibility,\r\n                    category,\r\n                    creator,\r\n                    image,\r\n                  }}\r\n                />\r\n                <ButtonHover></ButtonHover>\r\n              </ButtonGroup>\r\n            </Box>\r\n          </Item>\r\n        </Container>\r\n      </OuterContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LeftQuizMenu;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { updateQuizType, updateTimeLimit } from \"../../store/quizSummary\";\r\nimport {\r\n  Box,\r\n  InputLabel,\r\n  MenuItem,\r\n  FormControl,\r\n  Select,\r\n  Typography,\r\n  Divider,\r\n  TimerOutlinedIcon,\r\n  CategoryIcon,\r\n} from \"../../utlis/materialComponents\";\r\n\r\nconst RightQuizMenu = () => {\r\n  const dispatch = useDispatch();\r\n  const quizType = useSelector((state) => state.detail.quizType);\r\n  const timeLimit = useSelector((state) => state.detail.timeLimit);\r\n  const [quiz, setQuiz] = React.useState(quizType);\r\n  const [timer, setTimer] = React.useState(timeLimit);\r\n  const handleChangeQuiz = (event) => {\r\n    setQuiz(event.target.value);\r\n    dispatch(updateQuizType(event.target.value));\r\n  };\r\n  const handleChangeTimer = (event) => {\r\n    setTimer(event.target.value);\r\n    dispatch(updateTimeLimit(event.target.value));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Typography\r\n        component=\"div\"\r\n        gutterBottom\r\n        sx={{ fontWeight: \"bold\", textTransform: \"capitalize\", px: 3, mt: 6 }}\r\n      >\r\n        <CategoryIcon /> Question Type\r\n      </Typography>\r\n      <Box\r\n        sx={{\r\n          minWidth: 120,\r\n          ml: 1,\r\n          mb: 2,\r\n          width: \"90%\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <FormControl fullWidth>\r\n          <InputLabel id=\"demo-simple-select-label\">Quiz</InputLabel>\r\n          <Select\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            value={quiz}\r\n            label=\"Quiz\"\r\n            onChange={handleChangeQuiz}\r\n          >\r\n            <MenuItem value={\"quiz\"}>Quiz</MenuItem>\r\n            <MenuItem value={\"trueFalse\"}>True False</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Box>\r\n      <Divider />\r\n      <Typography\r\n        component=\"div\"\r\n        gutterBottom\r\n        sx={{ fontWeight: \"bold\", textTransform: \"capitalize\", px: 5, mt: 4 }}\r\n      >\r\n        <TimerOutlinedIcon /> Time Limit\r\n      </Typography>\r\n      <Box\r\n        sx={{\r\n          minWidth: 120,\r\n          ml: 1,\r\n          mb: 2,\r\n          width: \"90%\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <FormControl fullWidth>\r\n          <InputLabel id=\"demo-simple-select-label\">Timer</InputLabel>\r\n          <Select\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            value={timer}\r\n            label=\"Quiz\"\r\n            onChange={handleChangeTimer}\r\n          >\r\n            <MenuItem value={5}>5 seconds</MenuItem>\r\n            <MenuItem value={10}>10 seconds</MenuItem>\r\n            <MenuItem value={20}>20 seconds</MenuItem>\r\n            <MenuItem value={30}>30 seconds</MenuItem>\r\n            <MenuItem value={60}>60 seconds</MenuItem>\r\n            <MenuItem value={90}>90 seconds</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Box>\r\n      <Divider />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RightQuizMenu;\r\n","import React from \"react\";\r\nimport NewQuiz from \"../components/createquiz/NewQuiz\";\r\nimport LeftQuizMenu from \"../components/createquiz/LeftQuizMenu\";\r\nimport RightQuizMenu from \"../components/createquiz/RightQuizMenu\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport { Box, Paper, Grid } from \"../utlis/materialComponents\";\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  backgroundColor: theme.palette.mode === \"dark\" ? \"#1A2027\" : \"#fff\",\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(1),\r\n  textAlign: \"center\",\r\n\r\n  color: theme.palette.text.secondary,\r\n}));\r\nconst ItemContainer1 = styled(Item)(({ theme }) => ({\r\n  [theme.breakpoints.down(\"md\")]: {\r\n    height: \"37vh\",\r\n    bgcolor: \"#F2F2F1\",\r\n  },\r\n}));\r\nconst ItemContainer2 = styled(Item)(({ theme }) => ({\r\n  [theme.breakpoints.down(\"md\")]: {\r\n    height: \"100%\",\r\n    bgcolor: \"#F2F2F1\",\r\n  },\r\n}));\r\nconst CreateQuiz = () => {\r\n  document.title = \"Creator-QuizWorld\";\r\n  return (\r\n    <Box sx={{ flexGrow: 1, mt: 0.5, height: \"95vh\", bgcolor: \"#ffffff\" }}>\r\n      <Grid container spacing={0.1}>\r\n        <Grid item xs={12} md={2}>\r\n          <ItemContainer1 sx={{ height: \"95vh\",bgcolor: \"#ffffff\", }}>\r\n            <RightQuizMenu />\r\n          </ItemContainer1>\r\n        </Grid>\r\n        <Grid item xs={12} md={8}>\r\n          <Item sx={{ bgcolor: \"#F2F2F1\", height: \"95vh\" }}>\r\n            <NewQuiz />\r\n          </Item>\r\n        </Grid>\r\n        <Grid item xs={12} md={2}>\r\n          <ItemContainer2 sx={{ height: \"95vh\" }}>\r\n            <LeftQuizMenu />\r\n          </ItemContainer2>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CreateQuiz;\r\n"],"names":["url","process","axios","createNewQuiz","newQuiz","header","updateQuiz","id","data","playerAttempt","uid","api","console","log","result","newPlayer","label","inputProps","Item","styled","Paper","theme","backgroundColor","palette","mode","typography","body2","textAlign","fontColor","Answers","breakpoints","down","width","indexj","opt","index","correct","dispatch","useDispatch","quizType","useSelector","state","detail","useState","option","optionValue","setOptionValue","Grid","item","xs","md","Box","sx","display","flexDirection","height","color","borderRadius","TextField","onChange","e","target","value","onBlur","i","j","optionHandler","placeholder","variant","input","pl","justifyContent","InputProps","disableUnderline","Checkbox","onClick","correctOptionHandler","tfCorrectOptionHandler","checked","pink","Question","maxWidth","Buttons","ques","questionHandler","moreOption","setMoreOption","moreOptionText","setMoreOptionText","question","quesValue","setQuesValue","component","bgcolor","mt","boxShadow","noValidate","autoComplete","fullWidth","p","fontSize","flexGrow","mr","container","spacing","mb","options","map","op","correctOpt","Button","addMoreOptionHandler","removeMoreOptionHandler","fontWeight","textTransform","px","StarsRounded","DeleteOutlineOutlined","Divider","BoxContainer","quizArray","mcq","quizQna","truefalseArray","trueFalse","quizes","setQuizes","show","setShow","useEffect","text","quesHandler","tfQuesHandler","Container","fixed","maxHeight","className","styles","paperContainer","alignItems","props","file","setFile","previewUrl","setPreviewUrl","isValid","setIsValid","setImage","useContext","ImageContext","filePickerRef","useRef","fileReader","FileReader","onload","readAsDataURL","style","backgroundImage","backgroundRepeat","backgroundAttachment","backgroundPosition","backgroundSize","ref","type","accept","event","pickedFile","fileIsValid","files","length","py","current","click","ButtonHover","position","top","left","transform","React","open","setOpen","handleClose","Title","title","Description","description","Visibility","visibility","Creator","creator","Category","category","setTitle","setCreator","setCategory","setDescription","setVisibility","SettingsOutlined","Modal","onClose","Typography","gutterBottom","multiline","rows","errorText","FormControl","RadioGroup","row","name","FormControlLabel","control","Radio","minWidth","InputLabel","Select","labelId","MenuItem","m","ButtonGroup","updateTitle","updateDescription","updateVisibility","updateCategory","updateCreator","error","setError","errorMessage","setErrorMessage","useTheme","fullScreen","useMediaQuery","clickHandler","saveHandler","newTrueFalse","timeLimit","imgSrc","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","Link","to","require","gridAutoRows","OuterContainer","other","image","token","authData","quizId","saveInfoHandler","setLocationHandler","quiz","formData","FormData","append","JSON","stringify","headers","Authorization","tfResetHandler","resetDetailHandlers","resetQuizHandler","gap","gridColumn","gridRow","addNewQuestion","tfAddNewQuestion","setQuiz","timer","setTimer","ml","updateQuizType","TimerOutlined","updateTimeLimit","padding","secondary","ItemContainer1","ItemContainer2","document"],"sourceRoot":""}